library(R2HTML)

options(max.print=10000000)
options(width=500)

dflag <- "not_set"
wflag <- "not_set"

# Read commandline arguments:
#
Args <- commandArgs(TRUE)

minPD   <- as.numeric(Args[1])
minFC   <- as.numeric(Args[2])
maxFC   <- as.numeric(Args[3])
dflag   <- as.character(Args[4])
wflag   <- as.character(Args[5])

# Usage: dge.Rscript reads data from three tab-delimited spreadsheet files as detailed in
#         Section I below
#
#        Arguments minPD and minFC set the thresholds for the probability of being
#        differentially expressed and the fold change.  Only data points exceeding
#        the thresholds are printed in the final output.  maxFC imposes the further
#        restriction that fold change should not exceed maxFC.  Thus, for treatment-favored
#        genes, use something like "Rscript dge.Rscript 0.9 2.0 1000 decreasing up";
#        for control-favored genes, use something like "Rscript dge.Rscript 0.9 0 0.5 increasing down".
#

if (dflag == "decreasing" ) {
  dflag <- "T";
} else {
  dflag <- "F";
}


#   I) read data:
DGEinput <- "./deMvsC/IRBB7-MvsC.genes.DE.01"
TSRinput <- "../IRBB7-RAMPAGE/TSR/TSR-OUTPUT/TSRsetCombined.txt"
GENEmtch <- "../IRBB7-RAMPAGE/TSR/geneID2IRGSPmatch"
IRGSPdsc <- "../IRBB7-RAMPAGE/TSR/IRGSPgenes"

#
#   I.1 DGEdata:
#
DGEdata <- read.table(DGEinput, header=T, sep="\t");
DGEdata$featureID <- row.names(DGEdata)

#   I.2 TSR data:
#
TSRdata <- read.delim(TSRinput, check.names=FALSE, stringsAsFactors=FALSE)
colnames(TSRdata)[1] <- "promoter"

#   I.3 IRBB7 genes to IRGSP genes correspondence:
#
matchedgenes <- read.delim(GENEmtch, header=FALSE, check.names=FALSE, stringsAsFactors=FALSE)
colnames(matchedgenes) <- c("contig", "from", "to", "gene", "genematch")
genedesc <- read.delim(IRGSPdsc, header=FALSE, check.names=FALSE, stringsAsFactors=FALSE)
colnames(genedesc) <- c("gene", "description")

# ... add the NCBI URL for the gene products:
#
tmpv <- paste("<a href='https://www.ncbi.nlm.nih.gov/protein/",matchedgenes$genematch,sep="")
tmpv <- paste(tmpv,"'>",sep="")
tmpv <- paste(tmpv,matchedgenes$genematch,sep="")
tmpv <- paste(tmpv,"</a>",sep="")
matchedgenes$genelink <- tmpv
matchedgenes <- merge(matchedgenes,genedesc,by.x="genematch",by.y="gene",all.x=TRUE)

# ... update TSRdata to include matching gene information:
#
TSRdata <- merge(TSRdata,matchedgenes,by.x="featureID",by.y="gene",all.x=TRUE)

#  ... and change promoter column to include the same:
#
TSRdata$promoter <- paste(TSRdata$promoter,TSRdata$featureID,sep="=")
TSRdata$promoter <- paste(TSRdata$promoter,TSRdata$genematch,sep="=")

# ... similar update to DGEdata:
#
DGEdata <- merge(DGEdata,matchedgenes,by.x="featureID",by.y="gene",all.x=TRUE)
# .. round data to more reasonable numbers:
#
for (i in 2:7) { DGEdata[,i] <- round(DGEdata[,i],2) }

# ... combine everything:
#
GENES <- merge(DGEdata, TSRdata, by.x="featureID", by.y="featureID", all.x=T)


#  II) optionally check data and quit:
#
if ( wflag == "check" ) {
  write.table(TSRdata,file="table-TSRdata",quote=F,row.names=F,sep="\t")
  write.table(DGEdata,file="table-DGEdata",quote=F,row.names=F,sep="\t")
  write.table(GENES,file="table-GENES",quote=F,row.names=F,sep="\t")
}


# III) pull out what we want to focus on:
#
prtGENES <- subset(GENES, select= c(featureID,contig.x,from.x,to.x,genelink.x,description.x,PPDE,PostFC,C1Mean,C2Mean,promoter,start,end,strand,inoc1,inoc3,ctrl1,ctrl2))
prtGENES <- prtGENES[prtGENES$PPDE >= minPD & prtGENES$PostFC >= minFC & prtGENES$PostFC <= maxFC,]

# ... optionally select data (columns) of interest and print in particular order, then quit:
#     (edit as desired)
#
if ( wflag == "select" ) {
  myorder <- order(prtGENES$PostFC, decreasing=dflag)
  write.table(format(prtGENES[myorder,],digits=5),file="table-selectGENES",quote=F,row.names=F,sep="\t")
  q()
}

myorder <- order(prtGENES$PostFC, decreasing=dflag)
prtGENESordered <- prtGENES[myorder,]
colnames(prtGENESordered) <- c("featureID","contig","from","to","IRGSPmatch","Description","PPDE","FoldC","Trtm","Ctrl","IRBB7","Pstart","Pend","strand","inoc1","inoc3","ctrl1","ctrl2")
outfname <- paste("table-IRBB7-MvsC", wflag, sep="-")
write.table(format(prtGENESordered,digits=5),file=outfname,quote=F,row.names=F,sep="\t")

outfname <- paste(outfname, "html", sep=".")
HTML(prtGENESordered,file=outfname,append=FALSE,row.names=FALSE,align="right",digits=5,nsmall=2)
